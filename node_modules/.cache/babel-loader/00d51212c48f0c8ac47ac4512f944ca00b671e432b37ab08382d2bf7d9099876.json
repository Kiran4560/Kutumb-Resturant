{"ast":null,"code":"var _jsxFileName = \"D:\\\\Login-SignUp-Page\\\\food\\\\food-ordering-app\\\\src\\\\components\\\\PaymentForm.jsx\",\n  _s = $RefreshSig$();\nimport { useForm } from 'react-hook-form';\nimport { CardElement, useElements, useStripe, Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useEffect, useState } from 'react';\nimport Button from './elements/Button';\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearCart, getProductsCart } from '../stores/cart/cartSlice';\nimport { getAddress, clearAddress } from '../stores/userInfo/addressSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\nexport const StripeWrapper = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = StripeWrapper;\nconst PaymentForm = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const cart = useSelector(getProductsCart);\n  const address = useSelector(getAddress);\n  const navigate = useNavigate();\n  const elements = useElements();\n  const stripe = useStripe();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let uid = sessionStorage.getItem('User Id');\n    if (!stripe || !elements || !(cart !== null && cart !== void 0 && cart.products.length) || !uid || !address) {\n      return;\n    }\n    setLoading(true);\n    try {\n      console.log('here');\n      // Create payment intent on the server\n      const {\n        error: backendError,\n        clientSecret\n      } = await fetch('http://localhost:8080/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          paymentMethodType: 'card',\n          currency: 'usd',\n          orderItems: cart.products,\n          userId: uid,\n          shippingAddress: address\n        })\n      }).then(r => r.json());\n      console.log(clientSecret);\n\n      // Confirm the payment on the client\n      const {\n        error: stripeError,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (backendError || stripeError) {\n        setError(backendError || stripeError);\n      } else if (paymentIntent.status === 'succeeded') {\n        // clear cart and address\n        dispatch(clearAddress());\n        dispatch(clearCart());\n        navigate('/payment-success');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"md:w-2/3 md:mx-auto px-2 pt-1\",\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"card-element\",\n      className: \"pt-4 text-2xl md:text-center\",\n      children: \"Please enter your card details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: /*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center p-2\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Pay Now'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentForm, \"EHggIF5o2YoynycU3i5m9oBwldw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useNavigate, useElements, useStripe];\n});\n_c2 = PaymentForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"StripeWrapper\");\n$RefreshReg$(_c2, \"PaymentForm\");","map":{"version":3,"names":["useForm","CardElement","useElements","useStripe","Elements","loadStripe","useEffect","useState","Button","useNavigate","useSelector","useDispatch","clearCart","getProductsCart","getAddress","clearAddress","jsxDEV","_jsxDEV","stripePromise","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","StripeWrapper","stripe","children","PaymentForm","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","loading","setLoading","error","setError","dispatch","cart","address","navigate","elements","handleSubmit","e","preventDefault","uid","sessionStorage","getItem","products","length","console","log","backendError","clientSecret","fetch","method","headers","body","JSON","stringify","paymentMethodType","currency","orderItems","userId","shippingAddress","then","r","json","stripeError","paymentIntent","confirmCardPayment","payment_method","card","getElement","status","err","className","id","onSubmit","htmlFor","type","disabled","_c2","$RefreshReg$"],"sources":["D:/Login-SignUp-Page/food/food-ordering-app/src/components/PaymentForm.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport { CardElement, useElements, useStripe , Elements} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useEffect, useState } from 'react';\r\nimport Button from './elements/Button';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { clearCart, getProductsCart } from '../stores/cart/cartSlice';\r\nimport { getAddress, clearAddress } from '../stores/userInfo/addressSlice';\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\r\n\r\nexport const StripeWrapper = () => {\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <PaymentForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nconst PaymentForm = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(getProductsCart);\r\n    const address = useSelector(getAddress);\r\n    const navigate = useNavigate();\r\n    const elements = useElements();\r\n    const stripe = useStripe();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let uid = sessionStorage.getItem('User Id');\r\n        if (!stripe || !elements || !cart?.products.length || !uid || !address) {\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            console.log('here');\r\n        // Create payment intent on the server\r\n        const { error: backendError, clientSecret } = await fetch('http://localhost:8080/create-payment-intent', {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json' \r\n            },\r\n            body: JSON.stringify({\r\n                paymentMethodType: 'card',\r\n                currency: 'usd',\r\n                orderItems: cart.products,\r\n                userId: uid,\r\n                shippingAddress: address\r\n            })}).then(r => r.json());\r\n            console.log(clientSecret);\r\n\r\n        // Confirm the payment on the client\r\n        const { error: stripeError, paymentIntent } = await stripe.confirmCardPayment(\r\n            clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardElement),\r\n                }\r\n            }\r\n        )\r\n\r\n        if (backendError || stripeError) {\r\n            setError(backendError || stripeError);\r\n        }  else if (paymentIntent.status === 'succeeded') {\r\n            // clear cart and address\r\n            dispatch(clearAddress());\r\n            dispatch(clearCart());\r\n            navigate('/payment-success');\r\n        }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <form className=\"md:w-2/3 md:mx-auto px-2 pt-1\" id=\"payment-form\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"card-element\" className=\"pt-4 text-2xl md:text-center\">Please enter your card details</label>\r\n            <div className=\"my-4\">\r\n                <CardElement id=\"card-element\" />\r\n            </div>\r\n            <div className=\"flex justify-center p-2\">\r\n                <Button type=\"submit\" disabled={loading}>{\r\n                    loading ? 'Loading...' : 'Pay Now'\r\n                }</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,EAAGC,QAAQ,QAAO,yBAAyB;AACvF,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,eAAe,QAAQ,0BAA0B;AACrE,SAASC,UAAU,EAAEC,YAAY,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,aAAa,GAAGb,UAAU,CAACc,OAAO,CAACC,GAAG,CAACC,gCAAgC,CAAC;AAE9E,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,oBACIL,OAAA,CAACb,QAAQ;IAACmB,MAAM,EAAEL,aAAc;IAAAM,QAAA,eAC5BP,OAAA,CAACQ,WAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEnB,CAAC;AAAAC,EAAA,GANYR,aAAa;AAQ1B,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAAAM,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM6B,QAAQ,GAAGzB,WAAW,CAAC,CAAC;EAC9B,MAAM0B,IAAI,GAAG3B,WAAW,CAACG,eAAe,CAAC;EACzC,MAAMyB,OAAO,GAAG5B,WAAW,CAACI,UAAU,CAAC;EACvC,MAAMyB,QAAQ,GAAG9B,WAAW,CAAC,CAAC;EAC9B,MAAM+B,QAAQ,GAAGtC,WAAW,CAAC,CAAC;EAC9B,MAAMqB,MAAM,GAAGpB,SAAS,CAAC,CAAC;EAE1B,MAAMsC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,GAAG,GAAGC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;IAC3C,IAAI,CAACvB,MAAM,IAAI,CAACiB,QAAQ,IAAI,EAACH,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEU,QAAQ,CAACC,MAAM,KAAI,CAACJ,GAAG,IAAI,CAACN,OAAO,EAAE;MACpE;IACJ;IACAL,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACAgB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACvB;MACA,MAAM;QAAEhB,KAAK,EAAEiB,YAAY;QAAEC;MAAa,CAAC,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QACrGC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,iBAAiB,EAAE,MAAM;UACzBC,QAAQ,EAAE,KAAK;UACfC,UAAU,EAAExB,IAAI,CAACU,QAAQ;UACzBe,MAAM,EAAElB,GAAG;UACXmB,eAAe,EAAEzB;QACrB,CAAC;MAAC,CAAC,CAAC,CAAC0B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;MACxBjB,OAAO,CAACC,GAAG,CAACE,YAAY,CAAC;;MAE7B;MACA,MAAM;QAAElB,KAAK,EAAEiC,WAAW;QAAEC;MAAc,CAAC,GAAG,MAAM7C,MAAM,CAAC8C,kBAAkB,CACzEjB,YAAY,EAAE;QACVkB,cAAc,EAAE;UACZC,IAAI,EAAE/B,QAAQ,CAACgC,UAAU,CAACvE,WAAW;QACzC;MACJ,CACJ,CAAC;MAED,IAAIkD,YAAY,IAAIgB,WAAW,EAAE;QAC7BhC,QAAQ,CAACgB,YAAY,IAAIgB,WAAW,CAAC;MACzC,CAAC,MAAO,IAAIC,aAAa,CAACK,MAAM,KAAK,WAAW,EAAE;QAC9C;QACArC,QAAQ,CAACrB,YAAY,CAAC,CAAC,CAAC;QACxBqB,QAAQ,CAACxB,SAAS,CAAC,CAAC,CAAC;QACrB2B,QAAQ,CAAC,kBAAkB,CAAC;MAChC;IACA,CAAC,CAAC,OAAOmC,GAAG,EAAE;MACVzB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC;IACpB;IACAzC,UAAU,CAAC,KAAK,CAAC;EAErB,CAAC;EAED,oBACIhB,OAAA;IAAM0D,SAAS,EAAC,+BAA+B;IAACC,EAAE,EAAC,cAAc;IAACC,QAAQ,EAAEpC,YAAa;IAAAjB,QAAA,gBACrFP,OAAA;MAAO6D,OAAO,EAAC,cAAc;MAACH,SAAS,EAAC,8BAA8B;MAAAnD,QAAA,EAAC;IAA8B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC7GZ,OAAA;MAAK0D,SAAS,EAAC,MAAM;MAAAnD,QAAA,eACjBP,OAAA,CAAChB,WAAW;QAAC2E,EAAE,EAAC;MAAc;QAAAlD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNZ,OAAA;MAAK0D,SAAS,EAAC,yBAAyB;MAAAnD,QAAA,eACpCP,OAAA,CAACT,MAAM;QAACuE,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAEhD,OAAQ;QAAAR,QAAA,EACpCQ,OAAO,GAAG,YAAY,GAAG;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf,CAAC;AAAAE,EAAA,CAvEKN,WAAW;EAAA,QAGId,WAAW,EACfD,WAAW,EACRA,WAAW,EACVD,WAAW,EACXP,WAAW,EACbC,SAAS;AAAA;AAAA8E,GAAA,GARtBxD,WAAW;AAAA,IAAAK,EAAA,EAAAmD,GAAA;AAAAC,YAAA,CAAApD,EAAA;AAAAoD,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}